import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:dartz/dartz.dart';

final authRepositoryProvider = Provider<AuthRepository>((ref) => AuthRepository());

class AuthRepository {
  final FirebaseAuth _auth = FirebaseAuth.instance;
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;

  Future<Either<String, User>> login(String email, String password) async {
    try {
      final UserCredential userCredential = await _auth.signInWithEmailAndPassword(email: email, password: password);
      return right(userCredential.user!);
    } on FirebaseAuthException catch (e) {
      return left(e.message ?? "An error occurred");
    }
  }

  Future<Either<String, User>> register(String firstName, String lastName, String email, String password) async {
    try {
      final UserCredential userCredential = await _auth.createUserWithEmailAndPassword(email: email, password: password);
      final User user = userCredential.user!;

      // Store user details in Firestore
      await _firestore.collection("users").doc(user.uid).set({
        "uid": user.uid,
        "firstName": firstName,
        "lastName": lastName,
        "email": email,
        "createdAt": FieldValue.serverTimestamp(),
      });

      return right(user);
    } on FirebaseAuthException catch (e) {
      return left(e.message ?? "An error occurred");
    }
  }
}
